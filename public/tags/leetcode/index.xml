<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on Notes and Wiki</title>
    <link>https://yfw.ink/tags/leetcode/</link>
    <description>Recent content in leetcode on Notes and Wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 31 May 2022 23:50:00 +0800</lastBuildDate><atom:link href="https://yfw.ink/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>lc-146</title>
      <link>https://yfw.ink/posts/146-lru/</link>
      <pubDate>Tue, 31 May 2022 23:50:00 +0800</pubDate>
      
      <guid>https://yfw.ink/posts/146-lru/</guid>
      <description>Least recently used cache #  最近 最少 使用的缓存
解法： 双链表 + hash 表
 /** * Least Recently Used cache * Get: O(1), hash 表 * Put: O(1)，需要维持顺序，最近最少使用的节点要删掉 * * 双向链表 */ class LRUCache {  constructor(capacity) {  // 当前元素数量  // 容量上限  this.capacity = capacity;  /** @type {{[index: number]: LinkedListNode}} */  this.cache = {};  // 当前容量  this.size = 0;   // 伪头结点  this.</description>
    </item>
    
    <item>
      <title>leetcode-77</title>
      <link>https://yfw.ink/posts/lc-77/</link>
      <pubDate>Tue, 31 May 2022 16:30:00 +0800</pubDate>
      
      <guid>https://yfw.ink/posts/lc-77/</guid>
      <description>组合 #  给定两个整数 n 和 k，返回范围 [1, n] 中所有可能的 k 个数的组合。
你可以按 任何顺序 返回答案。
1 &amp;lt;= n &amp;lt;= 20
1 &amp;lt;= k &amp;lt;= n
题解 #   /** * n 选 k 共有多少个组合情况 * @param {number} n * @param {number} k */ const combine = (n, k) =&amp;gt; {  const ans = [];   /** * @param {number} k 子集的元素数 * @param {number} start 从第几个开始选 * @param {number} list 子集数组 */  const getCombine = (k, start, list) =&amp;gt; {  if (k === 0) {  // 选满了  ans.</description>
    </item>
    
  </channel>
</rss>
